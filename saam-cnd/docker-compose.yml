version: '3.8'

services:
  database:
    image: postgres:13-alpine
    container_name: saam-cnd-db
    environment:
      POSTGRES_DB: saam_cnd_db
      POSTGRES_USER: saamuser
      POSTGRES_PASSWORD: saampass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expor a porta do Postgres localmente para debug, se necessário
    networks:
      - saam-cnd-network

  saam-cnd-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: saam-cnd-api-container
    depends_on:
      - database
    ports:
      - "8080:8080" # Backend API
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/saam_cnd_db
      - SPRING_DATASOURCE_USERNAME=saamuser
      - SPRING_DATASOURCE_PASSWORD=saampass
      - SAAM_CR_VALIDATION_URL=http://saamauditoria-2.com.br:8085/api/empresa/getAttributeById/GLSAAM?attribute=situacao
      # Para testes, se você tiver um mock server rodando na sua máquina host:
      # SAAM_CR_VALIDATION_URL=http://host.docker.internal:9090/mock/saam-cr/validate
    networks:
      - saam-cnd-network
    volumes:
      - ./backend:/app # Montar o código local para desenvolvimento (opcional, remover para build de produção puro)

  saam-cnd-ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: saam-cnd-ui-container
    ports:
      - "3000:80" # Frontend UI (Nginx serve na porta 80 dentro do container)
    depends_on:
      - saam-cnd-api # Não estritamente necessário para build, mas bom para ordem de inicialização
    networks:
      - saam-cnd-network
    volumes:
      - ./frontend/src:/app/src # Montar o código local para desenvolvimento (opcional, remover para build de produção puro)
      - ./frontend/public:/app/public # Montar o código local para desenvolvimento (opcional, remover para build de produção puro)

volumes:
  postgres_data:

networks:
  saam-cnd-network:
    driver: bridge
